library(tidyverse)
read_csv("data/Bluejays.csv")
read_csv("data/BlueJays.csv")
df<-read.csv("data/cheese.csv")
bmi_data <-read.csv("data/bmi.csv")
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
bmi_data<- read_csv("data/bmi")
library(readr)
bmi <- read_csv("Desktop/data/bmi.csv")
View(bmi)
df<-read_csv("data/BlueJays.csv")
> df<-read_csv("studio/BlueJays.csv")
read_csv("data/BlueJays.csv")
read_csv("studio/BlueJays.csv")
read_csv("Studio/BlueJays.csv")
read_csv("Studio/BlueJays.csv")
library(tidyverse)
read_csv("Studio/BlueJays.csv")
getwd()
bmi_data<-read_csv("Studio/bmi.csv")
library(tidyverse)
library(tidyverse)
library(tidyverse)
fitbit_agger <- fitbit_interday %>%
group_by(identifier) %>%
mutate(Minutes_Moderatley_Active = activities_minutesfairlyactive + activities_minutesveryactive) %>%
summarise(
Daily_Steps_Mean = mean(activities_steps),
Minutes_Sedentary_Mean = mean(activities_minutessedentary),
Minutes_Moderatley_Active_Mean = mean(Minutes_Moderatley_Active)
)
fitbit_agger <- fitbit_interday %>%
group_by(identifier) %>%
mutate(Minutes_Moderatley_Active = activities_minutesfairlyactive + activities_minutesveryactive) %>%
summarise(
Daily_Steps_Mean = mean(activities_steps),
Minutes_Sedentary_Mean = mean(activities_minutessedentary),
Minutes_Moderatley_Active_Mean = mean(Minutes_Moderatley_Active), Hours_Sedentary = mean(activities_minutessedentary) / 60
)
fitbit_2 <- fitbit_amba %>%
group_by(identifier) %>%
summarise(
Days_Collected = n_distinct(as.Date(date)),
Daily_Steps_Mean = mean(activities_steps),
Minutes_Sedentary_Mean = mean(activities_minutessedentary),
Hours_Sedentary_Mean = mean(activities_minutessedentary / 60),
Minutes_Moderatley_Active_Mean = mean(activities_minutesfairlyactive + activities_minutesveryactive)
)
print(selected_data)
fitbit_amba <- read_csv("./Fitbit_Interday_Ambassadors.csv")
fitbit_amba <- read_csv("Documents/Fitbit_Interday_Ambassadors.csv")
setwd("~/Documents/data2")
fitbit_amba <- read_csv("data2/Fitbit_Interday_Ambassadors.csv")
getwd
getwd()
fitbit_amba <- read_csv("/Users/wala/Documents/data2/Fitbit_Interday_Ambassadors.csv")
fitbit_2 <- fitbit_amba %>%
group_by(identifier) %>%
summarise(
Days_Collected = n_distinct(as.Date(date)),
Daily_Steps_Mean = mean(activities_steps),
Minutes_Sedentary_Mean = mean(activities_minutessedentary),
Hours_Sedentary_Mean = mean(activities_minutessedentary / 60),
Minutes_Moderatley_Active_Mean = mean(activities_minutesfairlyactive + activities_minutesveryactive)
)
combined_data <- rbind(fitbit_2, fitbit_agger)
View(fitbit_amba)
View(fitbit_2)
combined_data <- cbind(fitbit_2, fitbit_agger)
combined_data <- fbind(fitbit_2, fitbit_agger)
combined_data <- rbind(fitbit_2, fitbit_agger)
combined_data <- merge(fitbit_2, fitbit_agger)
View(combined_data)
colnames(fitbit_2)
combined_data2 <- rbind(fitbit_2, fitbit_agger)
combined_data2 <- cbind(fitbit_2, fitbit_agger)
View(fitbit_2)
View(fitbit_agger)
rm(combined_data)
View(fitbit_agger)
View(fitbit_2)
rm(fitbit_2)
rm(fitbit_agger)
fitbit_agger <- fitbit_interday %>%
group_by(identifier) %>%
mutate(Minutes_Moderatley_Active = activities_minutesfairlyactive + activities_minutesveryactive) %>%
summarise(
Daily_Steps_Mean = mean(activities_steps),
Minutes_Sedentary_Mean = mean(activities_minutessedentary),
Minutes_Moderatley_Active_Mean = mean(Minutes_Moderatley_Active), Hours_Sedentary = mean(activities_minutessedentary) / 60
)
View(fitbit_agger)
fitbit_2 <- fitbit_amba %>%
group_by(identifier) %>%
mutate(Minutes_Moderatley_Active = activities_minutesfairlyactive + activities_minutesveryactive) %>%
summarise(
Daily_Steps_Mean = mean(activities_steps),
Minutes_Sedentary_Mean = mean(activities_minutessedentary),
Minutes_Moderatley_Active_Mean = mean(Minutes_Moderatley_Active), Hours_Sedentary = mean(activities_minutessedentary) / 60
)
View(fitbit_2)
combined_data<-rbind(fitbit_2,fitbit_agger)
View(combined_data)
combined_data_long <- pivot_longer(combined_data, cols = -identifier, names_to = "variable",values_to = "value")
View(combined_data_long)
library(readr)
DOB_Gen_032224 <- read_csv("DOB_Gen_032224.csv")
View(DOB_Gen_032224)
merged_data <- merge(combined_data, DOB_Gen_032224, by = "identifier")
View(merged_data)
View(combined_data_long)
combined_data_long <- pivot_longer(merged_data, cols = -identifier, names_to = "variable",values_to = "value")
merged_data_long <- pivot_longer(merged_data,
cols = c(Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderately_Active_Mean, DOB, Sex),
names_to = "variable",
values_to = "value")
merged_long <- pivot_longer(merged_data,)
merged_long <- pivot_longer(merged_data, cols = c(Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderatley_Active_Mean, DOB, Sex),
names_to = "variable",
values_to = "value")
# Select numeric columns for long format
numeric_cols <- merged_data %>%
select(identifier, Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderately_Active_Mean)
# Select numeric columns for long format
numeric_cols <- merged_data %>%
select(identifier, Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderatley_Active_Mean)
# Select character columns for long format
character_cols <- merged_data %>%
select(identifier, DOB, Sex)
# Convert numeric columns to long format
numeric_cols_long <- pivot_longer(numeric_cols,
cols = c(Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderatley_Active_Mean),
names_to = "variable",
values_to = "value")
# Convert character columns to long format
character_cols_long <- pivot_longer(character_cols,
cols = c(DOB, Sex),
names_to = "variable",
values_to = "value")
rlang::last_trace()
# Convert "Sex" column to character type and replace numeric values with labels
merged_data$Sex <- ifelse(merged_data$Sex == 0, "Female", "Male")
# Select numeric columns for long format
numeric_cols <- merged_data %>%
select(identifier, Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderately_Active_Mean)
# Convert "Sex" column to character type and replace numeric values with labels
merged_data$Sex <- ifelse(merged_data$Sex == 0, "Female", "Male")
# Select numeric columns for long format
numeric_cols <- merged_data %>%
select(identifier, Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderatley_Active_Mean)
# Select character columns for long format
character_cols <- merged_data %>%
select(identifier, DOB, Sex)
# Convert numeric columns to long format
numeric_cols_long <- pivot_longer(numeric_cols,
cols = c(Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderatley_Active_Mean),
names_to = "variable",
values_to = "value")
# Convert character columns to long format
character_cols_long <- pivot_longer(character_cols,
cols = c(DOB, Sex),
names_to = "variable",
values_to "value")
rm(character_cols,numeric_cols,numeric_cols_long)
birthdates <- c("3/9/1985", "7/16/1978", "1983", "6/3/1983", "10/31/1987", "1990", "1/26/1992", "7/28/1980", "7/20/1982", "12/21/1997", "2/20/1991", "1/1/1988", "1/14/1985", "12/30/1987", "1/29/1988", "6/30/1994", "6/18/1985", "12/30/1983", "5/25/1993", "8/11/1986", "3/26/1984", "8/20/1993", "8/11/1980", "12/17/1990", "10/11/1997", "5/4/1986", "10/30/1990", "5/31/1981", "3/30/1982", "1/19/1992", "8/21/1985", "1/26/1995", "5/21/1986", "9/27/1992", "10/9/1988", "5/23/1992", "3/18/1979", "1/16/1988", "1/17/1994", "9/4/1986", "1/5/1996", "10/14/2000", "1/29/2001", "1/12/1989", "8/7/1992", "7/18/1997", "5/10/1993", "2/19/1986", "7/20/1994", "7/26/1994", "8/30/1995", "12/3/1988", "11/30/1990", "5/14/1995", "4/17/1991", "12/19/2000", "1/26/1990", "10/15/1986", "3/18/1990", "4/6/1985", "1/21/1987", "11/25/1985", "12/26/1987", "3/27/1993", "1/4/1994")
birthdates <- mdy(birthdates)
# Calculate ages based on today's date (3/27/2024)
today <- mdy("3/27/2024")
ages <- year(today) - year(birthdates) - (month(today) < month(birthdates) | (month(today) == month(birthdates) & day(today) < day(birthdates)))
# Show the calculated ages
print(ages)
View(merged_data)
merged_data$DOB <- ifelse(grepl("^\\d{4}$", merged_data$DOB), paste0(merged_data$DOB, "-01-01"), merged_data$DOB)
# Convert DOB column to date format
merged_data$DOB <- mdy(merged_data$DOB)
# Calculate ages based on today's date (assuming today's date is 3/27/2024)
today <- mdy("3/27/2024")
merged_data$Age <- year(today) - year(merged_data$DOB) - (month(today) < month(merged_data$DOB) | (month(today) == month(merged_data$DOB) & day(today) < day(merged_data$DOB)))
# Remove the DOB column if you no longer need it
merged_data <- select(merged_data, -DOB)
# Rename the Age column
names(merged_data)[names(merged_data) == "Age"] <- "Age"
# View the updated merged_data
View(merged_data)
combined_data_long <- pivot_longer(merged_data, cols = -identifier, names_to = "variable",values_to = "value")
View(merged_data)
gender_values <- c(0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
# Replace "Sex" column in merged_data with gender_values
merged_data$Sex <- gender_values
merged_data$Sex <- ifelse(merged_data$Sex == "Female", 0, ifelse(merged_data$Sex == "Male", 1, NA))
# View the updated merged_data
View(merged_data)
View(merged_data)
View(merged_data)
View(DOB_Gen_032224)
library(readr)
DOB_Gen_032224 <- read_csv("DOB_Gen_032224.csv")
View(DOB_Gen_032224)
View(combined_data)
View(combined_data_long)
View(merged_data)
rm(merged_data)
merged_data <- merge(combined_data, DOB_Gen_032224, by = "identifier")
View(merged_data)
View(combined_data)
merged_long <- pivot_longer(merged_data, cols = c(Daily_Steps_Mean, Minutes_Sedentary_Mean, Minutes_Moderatley_Active_Mean, DOB, Sex),
names_to = "variable",
values_to = "value")
View(merged_long)
rm(merged_long)
combined_data_long <- pivot_longer(merged_data, cols = -identifier, names_to = "variable",values_to = "value")
View(combined_data_long)
View(combined_data_long)
View(combined_data)
View(combined_data_long)
rm(combined_data_long)
colnames(merged_data)[which(colnames(merged_data) == "DOB")] <- "Age"
colnames(merged_data)[which(colnames(merged_data) == "DOB")] <- "Sex"
colnames(merged_data)[which(colnames(merged_data) == "Sex")] <- "age"
colnames(merged_data)[which(colnames(merged_data) == "Age")] <- "Sex"
colnames(merged_data)[which(colnames(merged_data) == "age")] <- "Age"
colnames(merged_data)
merged_data_long <- merged_data %>%
pivot_longer(
cols = c("Daily_Steps_Mean", "Minutes_Sedentary_Mean", "Minutes_Moderatley_Active_Mean", "Hours_Sedentary", "Sex", "Age"),
names_to = "Variable",
values_to = "Value"
)
# View the long format data
View(merged_data_long)
save.image("~/Documents/data2/Untitled.RData")
# Filter the merged_data_long dataframe to include only the "Daily_Steps_Mean" variable
daily_steps_data <- merged_data_long %>%
filter(Variable == "Daily_Steps_Mean")
# Create a histogram using ggplot2
ggplot(daily_steps_data, aes(x = Value)) +
geom_histogram(binwidth = 500, fill = "blue", color = "black") +
labs(x = "Daily Steps Mean", y = "Frequency", title = "Histogram of Daily Steps Mean") +
theme_minimal()
library(ggplot2)
# Filter the merged_data_long dataframe to include only the "Daily_Steps_Mean" variable
daily_steps_data <- merged_data_long %>%
filter(Variable == "Daily_Steps_Mean")
# Create a histogram using ggplot2
ggplot(daily_steps_data, aes(x = Value)) +
geom_histogram(binwidth = 76, fill = "blue", color = "black") +
labs(x = "Daily Steps Mean", y = "Frequency", title = "Histogram of Daily Steps Mean") +
theme_minimal()
library(ggplot2)
# Filter the merged_data_long dataframe to include only the "Daily_Steps_Mean" variable
daily_steps_data <- merged_data_long %>%
filter(Variable == "Daily_Steps_Mean")
# Create a histogram using ggplot2
ggplot(daily_steps_data, aes(x = Value)) +
geom_histogram(binwidth = 500, fill = "blue", color = "black") +
labs(x = "Daily Steps Mean", y = "Frequency", title = "Histogram of Daily Steps Mean") +
theme_minimal()
library(ggplot2)
# Filter the merged_data_long dataframe to include only the "Daily_Steps_Mean" variable
daily_steps_data <- merged_data_long %>%
filter(Variable == "Daily_Steps_Mean")
# Create a histogram using ggplot2 with improved readability
ggplot(daily_steps_data, aes(x = Value)) +
geom_histogram(binwidth = 500, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = "Daily Steps Mean", y = "Frequency", title = "Histogram of Daily Steps Mean") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_blank())
library(ggplot2)
# Filter the merged_data_long dataframe to include only the "Daily_Steps_Mean" variable
daily_steps_data <- merged_data_long %>%
filter(Variable == "Daily_Steps_Mean")
# Create a histogram with a density curve using ggplot2
ggplot(daily_steps_data, aes(x = Value, y = ..density..)) +
geom_histogram(binwidth = 500, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(color = "red", size = 1.5) +
labs(x = "Daily Steps Mean", y = "Density", title = "Histogram with Density Curve") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_blank())
min(merged_data_long$Value)
library(ggplot2)
# Filter the merged_data_long dataframe to include only the "Daily_Steps_Mean" variable
daily_steps_data <- merged_data_long %>%
filter(Variable == "Daily_Steps_Mean")
# Create a histogram with custom axis limits using ggplot2
ggplot(daily_steps_data, aes(x = Value)) +
geom_histogram(binwidth = 500, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = "Daily Steps Mean", y = "Frequency", title = "Histogram of Daily Steps Mean") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_blank()) +
xlim(500, NA)
library(ggplot2)
# Filter the merged_data_long dataframe to include only the "Daily_Steps_Mean" variable
daily_steps_data <- merged_data_long %>%
filter(Variable == "Daily_Steps_Mean")
# Create a boxplot of Daily_Steps_Mean using ggplot2
ggplot(daily_steps_data, aes(x = "", y = Value)) +
geom_boxplot(fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = NULL, y = "Daily Steps Mean", title = "Boxplot of Daily Steps Mean") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_blank())
library(ggplot2)
# Assuming you want to create a scatter plot of Daily_Steps_Mean against another variable (e.g., Minutes_Sedentary_Mean)
scatter_data <- merged_data_long %>%
filter(Variable %in% c("Daily_Steps_Mean", "Minutes_Sedentary_Mean"))  # Include the desired variables
# Create a scatter plot using ggplot2
ggplot(scatter_data, aes(x = Value, y = Daily_Steps_Mean)) +
geom_point(color = "blue", alpha = 0.7) +  # Scatter plot points with blue color and transparency
labs(x = "Minutes Sedentary Mean", y = "Daily Steps Mean", title = "Scatter Plot") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"))
library(ggplot2)
# Filter the merged_data_long dataframe to include only the "Minutes_Sedentary_Mean" variable
sedentary_data <- merged_data_long %>%
filter(Variable == "Minutes_Sedentary_Mean")
# Create a histogram of Minutes_Sedentary_Mean using ggplot2
ggplot(sedentary_data, aes(x = Value)) +
geom_histogram(binwidth = 60, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = "Minutes Sedentary Mean", y = "Frequency", title = "Histogram of Minutes Sedentary Mean") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_blank())
library(ggplot2)
# Filter the merged_data_long dataframe to include only the "Hours_Sedentary" variable
hours_sedentary_data <- merged_data_long %>%
filter(Variable == "Hours_Sedentary")
# Create a histogram of Hours_Sedentary using ggplot2
ggplot(hours_sedentary_data, aes(x = Value)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = "Hours Sedentary", y = "Frequency", title = "Histogram of Hours Sedentary") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_blank())
merged_data$Hours_Active <- merged_data$Minutes_Moderatley_Active_Mean / 60
merged_data_long <- merged_data %>%
pivot_longer(
cols = c("Daily_Steps_Mean", "Minutes_Sedentary_Mean", "Minutes_Moderatley_Active_Mean", "Hours_Sedentary", "Sex", "Age", "Hours_Active
"),
names_to = "Variable",
values_to = "Value"
)
merged_data$Hours_Active <- merged_data$Minutes_Moderatley_Active_Mean / 60
rm(merged_data_long)
merged_data_long <- merged_data %>%
pivot_longer(
cols = c("Daily_Steps_Mean", "Minutes_Sedentary_Mean", "Minutes_Moderatley_Active_Mean", "Hours_Sedentary", "Sex", "Age", "Hours_Active
"),
names_to = "Variable",
values_to = "Value"
)
View(merged_data)
library(ggplot2)
# Create a histogram of Hours_Active using ggplot2
ggplot(merged_data, aes(x = Hours_Active)) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "black", alpha = 0.7) +
labs(x = "Hours Active", y = "Frequency", title = "Histogram of Hours Active") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"), panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), panel.border = element_blank())
library(ggplot2)
# Create a boxplot of Hours_Active and Hours_Sedentary using ggplot2
ggplot(merged_data, aes(x = c("Hours_Active", "Hours_Sedentary"), y = c(Hours_Active, Hours_Sedentary))) +
geom_boxplot(fill = c("skyblue", "lightgreen")) +
labs(x = "Variable", y = "Hours", title = "Boxplot of Hours Active and Hours Sedentary") +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"))
library(ggplot2)
# Create a new dataframe for plotting
plot_data <- merged_data[c("Hours_Active", "Hours_Sedentary")]
# Convert the data to long format for plotting
plot_data_long <- tidyr::gather(plot_data, key = "Variable", value = "Hours", Hours_Active, Hours_Sedentary)
# Create a boxplot of Hours_Active and Hours_Sedentary
ggplot(plot_data_long, aes(x = Variable, y = Hours, fill = Variable)) +
geom_boxplot() +
labs(x = "Variable", y = "Hours", title = "Boxplot of Hours Active and Hours Sedentary") +
scale_fill_manual(values = c("skyblue", "lightgreen")) +
theme_minimal() +
theme(axis.text = element_text(size = 12), axis.title = element_text(size = 14, face = "bold"),
plot.title = element_text(size = 16, face = "bold"))
